#-------------------seNBD-------------------
seAIC_2<-function(x){
res<-list()
I<-dim(x)[1]
dim<-dim(x)[2]
seNBD<- function(x,i){
return(function(ps){
N<-dim(x)[1]
dim<-dim(x)[2]
ll<-0.0
L<-c()
r<-1/(1+exp(-ps[1]))
K0<-exp(ps[2])
M0<-exp(ps[3])
L[1:dim]<-exp(ps[4:(4+dim-1)])
L[1:dim!=i]<-Inf
t<-1
K<-K0
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
for(t in 2:(N)){
K<-(K-K0)*r+K0+K0/L[1]*x[(t-1),1]+K0/L[2]*x[(t-1),2]
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
}
return(ll)
}
)
}
ini<-c(rep(0.1,(dim+3)))
for (i in 1:2) {
seNBD_exp<-optim(ini,seNBD(x,i),method="L-BFGS-B",hessian=TRUE,control=list(fnscale=-1))
r<-1/(1+exp(-seNBD_exp$par[1]))
K0<-exp(seNBD_exp$par[2])
M0<-exp(seNBD_exp$par[3])
L<-c()
L[1:dim]<-exp(seNBD_exp$par[4:(4+dim-1)])
L[1:dim!=i]<-Inf
AIC<-(-seNBD_exp$value+length(ini))*2
BIC<--2*seNBD_exp$value+4*log(I*dim)
res[[i]]<-data.frame(AIC=AIC,K0=K0,M0=M0,"M0/K0"=M0/K0,La=L[1],Lb=L[2],r)
}
return(res)
}
df<-data.frame(data[[1]]$Defaulted,data[[2]]$Defaulted)
seAIC_2(df)
#-------------------seNBD-------------------
mul_seAIC_n<-function(x,a,initial){
res<-list()
I  <-dim( data.frame(x) )[1]
dim<-dim( data.frame(x) )[2]
seNBD<- function(x,i){
return(function(ps){
N<-dim(x)[1]
dim<-dim(x)[2]
ll<-0.0
L<-c()
r<-1/(1+exp(-ps[1]))
K0<-exp(ps[2])
M0<-exp(ps[3])
L[1:dim]<-exp(ps[4:(4+dim-1)])
t<-1
K<-K0
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
for(t in 2:(N)){
K<-K0+(K-K0)*r+(K0/L)%*%x[(t-1),]
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
}
return(ll)
}
)
}
df<-data.frame()
x<-matrix(as.matrix(x),nrow(x),ncol(x))
for (i in 1:dim) {
ini<-c(par_seNBD[a[i],1],par_seNBD[a[i],2],par_seNBD[a[i],3],rep(initial,dim))
ini[(3+i)]<-par_seNBD[a[i],4]
seNBD_exp<-optim(ini,seNBD(x,i),method="L-BFGS-B",hessian=TRUE,control=list(fnscale=-1))
r<-1/(1+exp(-seNBD_exp$par[1]))
K0<-exp(seNBD_exp$par[2])
M0<-exp(seNBD_exp$par[3])
L<-c()
L[1:dim]<-exp(seNBD_exp$par[4:(4+dim-1)])
AIC<-(-seNBD_exp$value+length(ini))*2
BIC<--2*seNBD_exp$value+length(ini)*log(I*dim)
df1<-data.frame(AIC=AIC,K0=K0,M0=M0,"M0/K0"=M0/K0,L[1],L[2],L[3],r)#,L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],r)[1,]
df<-rbind(df,df1)
}
return(df)
}
#-------------------seNBD-------------------
seAIC_n<-function(x){
res<-list()
I  <-dim( data.frame(x) )[1]
dim<-dim( data.frame(x) )[2]
seNBD<- function(x,i){
return(function(ps){
N<-dim(x)[1]
dim<-dim(x)[2]
ll<-0.0
L<-c()
r<-1/(1+exp(-ps[1]))
K0<-exp(ps[2])
M0<-exp(ps[3])
L[1:dim]<-exp(ps[4:(4+dim-1)])
t<-1
K<-K0
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
for(t in 2:(N)){
K<-K0+(K-K0)*r+(K0/L)%*%x[(t-1),]
ll<-ll+dnbinom(x[t,i],size=K,p=K0/(M0+K0),log=TRUE)
}
return(ll)
}
)
}
df<-data.frame()
x<-matrix(as.matrix(x),nrow(x),ncol(x))
for (i in 1:dim) {
ini<-c(par_seNBD[i,1],par_seNBD[i,2],par_seNBD[i,3],rep(0.000001,dim))
ini[3+i]<-par_seNBD[i,4]
seNBD_exp<-optim(ini,seNBD(x,i),method="L-BFGS-B",hessian=TRUE,control=list(fnscale=-1))
r<-1/(1+exp(-seNBD_exp$par[1]))
K0<-exp(seNBD_exp$par[2])
M0<-exp(seNBD_exp$par[3])
L<-c()
L[1:dim]<-exp(seNBD_exp$par[4:(4+dim-1)])
AIC<-(-seNBD_exp$value+length(ini))*2
BIC<--2*seNBD_exp$value+length(ini)*log(I*dim)
df1<-data.frame(AIC=AIC,K0=K0,M0=M0,"M0/K0"=M0/K0,L[1],L[2],L[3],L[4],L[5],L[6],r)#,L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],r)[1,]
df<-rbind(df,df1)
}
return(df)
}
df<-data.frame(data[[1]]$Defaulted,data[[2]]$Defaulted)
result<-seAIC_n(df)
result
#save(inter2,inter3,inter4,inter5,inter6,inter7,inter8,inter9,inter10,inter11,inter12,inter13,file = "interactive.RData")
load("interactive.RData")
inter<-list()
inter[[ 2]]<-inter2
inter[[ 3]]<-inter3
inter[[ 4]]<-inter4
inter[[ 5]]<-inter5
inter[[ 6]]<-inter6
inter[[ 7]]<-inter7
inter[[ 8]]<-inter8
inter[[ 9]]<-inter9
inter[[10]]<-inter10
inter[[11]]<-inter11
inter[[12]]<-inter12
best<-list()
for (j in 2:12) {
b<-inter[[j]]
a<-c()
for (i in 1:13) {
if(TRUE%in%(b[,1]%in%i)){
a<-rbind(a,b[b[,1]%in%i,][b[b[,1]%in%i,][,dim(b)[2]]==min(b[b[,1]%in%i,][,dim(b)[2]])])
}
else next
}
best[[j]]<-a
}
best[[13]]<-inter13
head(best,2)
No1<-list()
j<-2
for (i in 1:13) {
if( i%in%best[[j]][best[[j]][,1]==i,] ){
No1[[i]]<-best[[j]][best[[j]][,1]==i,]
}
else next
}
for(j in 2:13){
for (i in 1:13) {
if( i%in%best[[j]][,1] ){
if(No1[[i]][length(No1[[i]])]>best[[j]][best[[j]][,1]==i ,dim(best[[j]])[2]]) {
No1[[i]]<-best[[j]][best[[j]][,1]==i,]
}
else next}
else next
}
}
No1
result<-c()
for (i in 1:13) {
df<-c()
for (j in No1[[i]][1:(length(No1[[i]])-1)]) {
df<-cbind(df,data[[j]]$Defaulted)
}
result<-rbind(result,seAIC_n(df)[1,])
}
result
#write.csv(result,file = "best.csv")
NBD_No1<-No1
NBD_result<-result
#save(NBD_No1,NBD_result,file = "No1_NBD.RData")
matpow <- function(x, pow) {
y <- eigen(x)
y$vectors %*% diag( (y$values)^pow ) %*% solve(y$vectors)
}
df<-c()
df3<-c()
x<-c()
for (j in 1:13 ) {
x<-cbind(x,data[[j]]$Defaulted)
}
N  <-dim(x)[1]
dim<-dim(x)[2]
r<-c();M0<-c();Mt<-c();T_i<-c();L<-matrix(Inf,nrow=dim,ncol=dim)
for (j in 1:13 ) {
r[j]  <-result$r[j]
M0[j] <-result$M0[j]
T_i[j]<-1/(1-r[j])
for (k in 1:(length(No1[[j]])-1)) {
L[j,No1[[j]][k]]<-result[j,(4+k)]
}
t<-1
Mt[j]<-M0[j]
for(t in 2:(N+1)){
Mt[j]<-M0[j]+(Mt[j]-M0[j])*r[j]+(M0[j]/L[j,])%*%x[(t-1),]
}
}
S <-M0/L*T_i       #S
S_<-M0/L          #Sハット
r
#V_inf
aa<-matrix(0,dim,dim)
for (i in 1:50000) {
aa<-aa+matpow((diag(r)+S_),i)
}
df2<-solve((diag(dim)-S))%*%S
df22<-S_%*%aa
Re(df22);Re(df2)
#write.csv(df2,file = "v_impact.csv")
name<-c("Building","Consumer","Energy","FI","Health","Hitech",
"Insurance","Leisure","Metal","Real Estate","Telecom","Transport","Utility")
for (i in 1:13) {
barplot(Re(df22)[i,],names.arg=name,las = 2,main = name[i])
}
barplot(rowSums(Re(df22)),names.arg=name,las = 2,main = "")
for (i in 1:13) {
barplot(Re(df2)[i,],names.arg=name,las = 2,main = name[i])
}
barplot(rowSums(Re(df2)),names.arg=name,las = 2,main = "")
barplot(colSums(Re(df2)),names.arg=name,las = 2,main = "")
barplot(colSums(Re(df2))/13,names.arg=name,las = 2,main = "")
for (i in 1:13) {
barplot(Re(df2)[i,],names.arg=name,las = 2,main = name[i])
}
barplot(colSums(Re(df2))/13,names.arg=name,las = 2,main = "")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(MASS)
library(data.table)
library(gtools)
getwd()
data<-list()
#lf <- list.files(path = "/home/hattori/デスクトップ/Hawkes_hisakado/Hawkes_1115_monthly",full.names = TRUE)
lf <- list.files(path = "/home/hattori/デスクトップ/Hawkes_hisakado/Hawkes_1115_quarter_new",full.names = TRUE)
name<-list.files(path = "/home/hattori/デスクトップ/Hawkes_hisakado/Hawkes_1115_quarter_new",full.names = FALSE)
for (i in 1:13) {
data[[i]]<-fread(lf[i] , header = TRUE)
names(data[[i]])[which(names(data[[i]])=="Up/Down")]<-"date"
data[[i]]$date<-as.Date(data[[i]]$date, format = "%m/%d/%Y")
}
#data
#data[[1]]$`Up/Down`
#timedata<-cbind(data[[1]]$`Up/Down`)
#timedata
#for (i in 1:13) {
#timedata<-cbind(timedata,data[[i]]$Defaulted)
#}
#write.csv(timedata,file = "jikeiretu.csv")
data[[2]]$Defaulted
plot(data[[1]]$date,data[[1]]$Defaulted,type = "l")
Haw_AIC_1<-function(x){
I  <-length(x)
#------------------Hawkes------------------
haw<- function(x){
return(function(ps){
N<-length(x)
ll<-0.0
r<-1/(1+exp(-ps[1]))
M0<-exp(ps[2])
L<-exp(ps[3])
t<-1
Mt<-M0
ll<-dpois(x[t],Mt,log=TRUE)
for(t in 2:N){
Mt<-M0+(Mt-M0)*r+(M0/L)*x[(t-1)]
ll<-ll+dpois(x[t],Mt,log=TRUE)
}
return(ll)
}
)
}
ini<-c(0,0,0)
exp_par<-optim(ini,haw(x),method="L-BFGS-B",control = list(fnscale = -1),hessian = TRUE)
r<-1/(1+exp(-exp_par$par[1]))
M0<-exp(exp_par$par[2])
L<-exp(exp_par$par[3])
n<-M0/L/(1-r)
mu<-M0/(1-n)
AIC<--2*exp_par$value+2*length(ini)
df <-data.frame(AIC=AIC,M0,L,mu,r)
df1<-data.frame(exp_par$par[1],exp_par$par[2],exp_par$par[3])
return(list(df,df1))
}
df <-data.frame()
df1<-data.frame()
for (i in 1:13) {
df <-rbind(df ,Haw_AIC_1(data[[i]]$Defaulted)[[1]])
df1<-rbind(df1,Haw_AIC_1(data[[i]]$Defaulted)[[2]])
}
Hawkes_AIC<-df[,1]
Hawkes_par<-df1
#write.csv(df,file = "Hawkes1.csv")
df
#save(Hawkes_AIC,Hawkes_par,file = "Hawkes_AIC_par.RData")
Hawkes_AIC;Hawkes_par
Hawkes_AIC_n<-function(x,a,initial){
I  <-dim( data.frame(x) )[1]
dim<-dim( data.frame(x) )[2]
#------------------Hawkes------------------
haw<- function(x,i){
return(function(ps){
N<-dim(x)[1]
dim<-dim(x)[2]
ll<-0.0
r<-1/(1+exp(-ps[1]))
M0<-exp(ps[2])
L<-c()
L[1:dim]<-exp(ps[3:(3+dim-1)])
t<-1
Mt<-M0
ll<-dpois(x[t,i],Mt,log=TRUE)
for(t in 2:N){
Mt<-M0+(Mt-M0)*r+(M0/L)%*%x[(t-1),]
ll<-ll+dpois(x[t,i],Mt,log=TRUE)
}
return(ll)
}
)
}
df<-data.frame()
x<-matrix(as.matrix(x),nrow(x),ncol(x))
for (i in 1:dim) {
ini<-c(Hawkes_par[a[i],1],Hawkes_par[a[i],2],rep(initial,dim))
ini[(2+i)]<-Hawkes_par[a[i],3]
exp_par<-optim(ini,haw(x,i),method="L-BFGS-B",control = list(fnscale = -1),hessian = TRUE)
r<-1/(1+exp(-exp_par$par[1]))
M0<-exp(exp_par$par[2])
L<-c()
L[1:dim]<-exp(exp_par$par[3:(3+dim-1)])
AIC<--2*exp_par$value+2*length(ini)
df1<-data.frame(AIC=AIC,M0,L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],r)
df<-rbind(df,df1)
}
return(df)
}
Haw_AIC_n<-function(x){
I  <-dim( data.frame(x) )[1]
dim<-dim( data.frame(x) )[2]
#------------------Hawkes------------------
haw<- function(x,i){
return(function(ps){
N<-dim(x)[1]
dim<-dim(x)[2]
ll<-0.0
r<-1/(1+exp(-ps[1]))
M0<-exp(ps[2])
L<-c()
L[1:dim]<-exp(ps[3:(3+dim-1)])
t<-1
Mt<-M0
ll<-dpois(x[t,i],Mt,log=TRUE)
for(t in 2:N){
Mt<-M0+(Mt-M0)*r+(M0/L)%*%x[(t-1),]
ll<-ll+dpois(x[t,i],Mt,log=TRUE)
}
return(ll)
}
)
}
df<-data.frame()
x<-matrix(as.matrix(x),nrow(x),ncol(x))
for (i in 1:dim) {
ini<-c(0,0,rep(0,dim))
exp_par<-optim(ini,haw(x,i),method="L-BFGS-B",control = list(fnscale = -1),hessian = TRUE)
r<-1/(1+exp(-exp_par$par[1]))
M0<-exp(exp_par$par[2])
L<-c()
L[1:dim]<-exp(exp_par$par[3:(3+dim-1)])
AIC<--2*exp_par$value+2*length(ini)
df1<-data.frame(AIC=AIC,M0,L[1],L[2],L[3],L[4],L[5],L[6],L[7],L[8],L[9],L[10],L[11],L[12],L[13],r)
df<-rbind(df,df1)
}
return(df)
}
df<-c()
for (i in 1:13) {
df<-cbind(df,data[[i]]$Defaulted)
}
Hawkes_AIC_n(df,c(1:13),0)
#save(inter2,inter3,inter4,inter5,inter6,inter7,inter8,inter9,inter10,inter11,inter12,inter13,file = "Hawkes_interactive.RData")
load("Hawkes_interactive.RData")
head(inter2,3);head(inter3,3);head(inter4,3);head(inter5,3)
head(inter6,3);head(inter7,3);head(inter8,3);head(inter9,3);head(inter10,3);head(inter11,3)
inter<-list()
inter[[ 2]]<-inter2
inter[[ 3]]<-inter3
inter[[ 4]]<-inter4
inter[[ 5]]<-inter5
inter[[ 6]]<-inter6
inter[[ 7]]<-inter7
inter[[ 8]]<-inter8
inter[[ 9]]<-inter9
inter[[10]]<-inter10
inter[[11]]<-inter11
inter[[12]]<-inter12
inter[[13]]<-inter13
best<-list()
for (j in 2:12) {
b<-inter[[j]]
a<-c()
for (i in 1:13) {
if(TRUE%in%(b[,1]%in%i)){
a<-rbind(a,b[b[,1]%in%i,][b[b[,1]%in%i,][,dim(b)[2]]==min(b[b[,1]%in%i,][,dim(b)[2]])])
}
else next
}
best[[j]]<-a
}
best[[13]]<-inter13
head(best,2)
No1<-list()
j<-2
for (i in 1:13) {
if( i%in%best[[j]][best[[j]][,1]==i,] ){
No1[[i]]<-best[[j]][best[[j]][,1]==i,]
}
else next
}
for(j in 2:13){
for (i in 1:13) {
if( i%in%best[[j]][,1] ){
if(No1[[i]][length(No1[[i]])]>best[[j]][best[[j]][,1]==i ,dim(best[[j]])[2]]) {
No1[[i]]<-best[[j]][best[[j]][,1]==i,]
}
else next}
else next
}
}
No1
result<-c()
for (i in 1:13) {
df<-c()
for (j in No1[[i]][1:(length(No1[[i]])-1)]) {
df<-cbind(df,data[[j]]$Defaulted)
}
a<-No1[[i]][1:(length(No1[[i]])-1)]
a
result<-rbind(result,Hawkes_AIC_n(df,a,0)[1,])
}
result
#write.csv(result,file = "Hawkes_best.csv")
Haw_No1<-No1
Haw_result<-result
#save(Haw_No1,Haw_result,file = "No1.RData")
matpow <- function(x, pow) {
y <- eigen(x)
y$vectors %*% diag( (y$values)^pow ) %*% solve(y$vectors)
}
df<-c()
df3<-c()
x<-c()
for (j in 1:13 ) {
x<-cbind(x,data[[j]]$Defaulted)
}
N  <-dim(x)[1]
dim<-dim(x)[2]
r<-c();M0<-c();Mt<-c();T_i<-c();L<-matrix(Inf,nrow=dim,ncol=dim)
for (j in 1:13 ) {
r[j]  <-result$r[j]
M0[j] <-result$M0[j]
T_i[j]<-1/(1-r[j])
for (k in 1:(length(No1[[j]])-1)) {
L[j,No1[[j]][k]]<-result[j,2+k]
}
t<-1
Mt[j]<-M0[j]
for(t in 2:(N+1)){
Mt[j]<-M0[j]+(Mt[j]-M0[j])*r[j]+(M0[j]/L[j,])%*%x[(t-1),]
}
}
S <-M0/L*T_i       #S
S_<-M0/L          #Sハット
#V_inf
aa<-matrix(0,dim,dim)
for (i in 1:50000) {
aa<-aa+matpow((diag(r)+S_),i)
}
df2<-solve((diag(dim)-S))%*%S
df22<-S_%*%aa
Re(df22);Re(df2)
name<-c("Building","Consumer","Energy","FI","Health","Hitech",
"Insurance","Leisure","Metal","Real Estate","Telecom","Transport","Utility")
for (i in 1:13) {
barplot(Re(df22)[i,],las = 2,names.arg=name,main = name[i])
}
barplot(colSums(Re(df22)),names.arg=name,las = 2,main = "")
L;result;No1
barplot(colSums(Re(df22))/13,names.arg=name,las = 2,main = "")
